@model Assignment.Models.Cart

@{
    ViewData["Title"] = "Giỏ Hàng";
    double totalPrice = 0;
    double discount = (double)(TempData["DiscountAmount"] ?? 0.0);
    string voucherCode = TempData["VoucherCode"] as string ?? string.Empty;
    int itemCount = Model.CartItems?.Count ?? 0;
    string discountInvariant = discount.ToString(System.Globalization.CultureInfo.InvariantCulture);
    TempData.Keep("DiscountAmount");
    TempData.Keep("VoucherCode");
}

<div class="container my-5">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">
                <i class="fas fa-shopping-cart"></i> Giỏ Hàng Của Bạn
            </h2>

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (Model.CartItems == null || !Model.CartItems.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-shopping-cart fa-5x text-muted mb-3"></i>
                    <h4>Giỏ hàng của bạn đang trống</h4>
                    <p class="text-muted">Hãy thêm sản phẩm vào giỏ hàng để tiếp tục mua sắm</p>
                    <a href="@Url.Action("Index", "Home")" class="btn btn-primary mt-3">
                        <i class="fas fa-shopping-bag"></i> Tiếp tục mua sắm
                    </a>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-lg-8">
                        <div class="card shadow-sm">
                            <div class="card-body">
                                <table class="table align-middle">
                                    <thead>
                                        <tr>
                                            <th class="text-center" style="width: 50px;">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" id="select-all" checked>
                                                </div>
                                            </th>
                                            <th>Sản phẩm</th>
                                            <th>Đơn giá</th>
                                            <th class="text-center">Số lượng</th>
                                            <th class="text-end">Thành tiền</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.CartItems)
                                        {
                                            double itemPrice = 0;
                                            string itemName = "";
                                            string itemImage = "";

                                            if (item.Product != null)
                                            {
                                                itemPrice = PriceCalculator.GetProductFinalPrice(item.Product);
                                                itemName = item.Product.Name;
                                                itemImage = item.Product.ProductImageUrl ?? "/images/no-image.jpg";
                                            }
                                            else if (item.Combo != null)
                                            {
                                                itemPrice = PriceCalculator.GetComboFinalPrice(item.Combo);
                                                itemName = item.Combo.Name;
                                                itemImage = item.Combo.ImageUrl ?? "/images/no-image.jpg";
                                            }

                                            double itemTotal = itemPrice * item.Quantity;
                                            string itemTotalInvariant = itemTotal.ToString(System.Globalization.CultureInfo.InvariantCulture);
                                            totalPrice += itemTotal;

                                            <tr>
                                                <td class="text-center">
                                                    <div class="form-check">
                                                        <input type="checkbox"
                                                               class="form-check-input cart-item-checkbox"
                                                               value="@item.Id"
                                                               data-id="@item.Id"
                                                               data-total="@itemTotalInvariant"
                                                               checked />
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <img src="@itemImage" alt="@itemName"
                                                             class="img-thumbnail me-3"
                                                             style="width: 80px; height: 80px; object-fit: cover;">
                                                        <div>
                                                            <h6 class="mb-0">@itemName</h6>
                                                            @if (item.Product != null)
                                                            {
                                                                <small class="text-muted">Sản phẩm</small>
                                                            }
                                                            else
                                                            {
                                                                <small class="text-muted">Combo</small>
                                                            }
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <strong>@itemPrice.ToString("N0") đ</strong>
                                                </td>
                                                <td class="text-center">
                                                    <form asp-controller="Cart" asp-action="UpdateQuantity" method="post" class="d-inline">
                                                        <input type="hidden" name="cartItemId" value="@item.Id" />
                                                        <div class="input-group" style="width: 130px; margin: auto;">
                                                            <button type="button" class="btn btn-outline-secondary btn-sm"
                                                                    onclick="this.closest('form').querySelector('input[type=number]').stepDown(); this.closest('form').submit();">
                                                                <i class="fas fa-minus"></i>
                                                            </button>
                                                            <input type="number" name="quantity" value="@item.Quantity"
                                                                   min="1" class="form-control form-control-sm text-center"
                                                                   onchange="this.form.submit()">
                                                            <button type="button" class="btn btn-outline-secondary btn-sm"
                                                                    onclick="this.closest('form').querySelector('input[type=number]').stepUp(); this.closest('form').submit();">
                                                                <i class="fas fa-plus"></i>
                                                            </button>
                                                        </div>
                                                    </form>
                                                </td>
                                                <td class="text-end">
                                                    <strong class="text-primary">@itemTotal.ToString("N0") đ</strong>
                                                </td>
                                                <td class="text-center">
                                                    <form asp-controller="Cart" asp-action="Remove" method="post" class="d-inline"
                                                          onsubmit="return confirm('Bạn có chắc muốn xóa sản phẩm này?')">
                                                        <input type="hidden" name="cartItemId" value="@item.Id" />
                                                        <button type="submit" class="btn btn-danger btn-sm">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </form>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                                <div class="d-flex justify-content-between mt-3">
                                    <a href="@Url.Action("Index", "Home")" class="btn btn-outline-secondary">
                                        <i class="fas fa-arrow-left"></i> Tiếp tục mua sắm
                                    </a>
                                    <form asp-controller="Cart" asp-action="Clear" method="post" class="d-inline"
                                          onsubmit="return confirm('Bạn có chắc muốn xóa toàn bộ giỏ hàng?')">
                                        <button type="submit" class="btn btn-outline-danger">
                                            <i class="fas fa-trash-alt"></i> Xóa giỏ hàng
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="card shadow-sm sticky-top" style="top: 20px;">
                            <div class="card-body">
                                <h5 class="card-title mb-3">Tổng đơn hàng</h5>

                                <div class="d-flex justify-content-between mb-2">
                                    <span>Tạm tính:</span>
                                    <strong id="cart-subtotal">@totalPrice.ToString("N0") đ</strong>
                                </div>

                                <div class="d-flex justify-content-between mb-2">
                                    <span>Phí vận chuyển:</span>
                                    <strong class="text-success">Miễn phí</strong>
                                </div>

                                <div class="d-flex justify-content-between mb-2">
                                    <span>VAT (15%):</span>
                                    <strong id="cart-vat">@((totalPrice * 0.15).ToString("N0")) đ</strong>
                                </div>

                                <div id="cart-discount-row" class="d-flex justify-content-between mb-2 text-success @(discount > 0 && !string.IsNullOrEmpty(voucherCode) ? string.Empty : "d-none")">
                                    <span class="text-success">
                                        @(discount > 0 && !string.IsNullOrEmpty(voucherCode) ? $"Giảm giá ({voucherCode})" : "Giảm giá")
                                    </span>
                                    <strong id="cart-discount-amount">-@discount.ToString("N0") đ</strong>
                                </div>

                                <hr>

                                <div class="d-flex justify-content-between mb-3">
                                    <h5>Tổng cộng:</h5>
                                    <h5 class="text-danger" id="cart-total">@((totalPrice - discount + (totalPrice - discount) * 0.15).ToString("N0")) đ</h5>
                                </div>

                                <form asp-controller="Cart" asp-action="ProceedToCheckout" method="post" id="proceedCheckoutForm" class="d-grid">
                                    @Html.AntiForgeryToken()
                                    <div id="selected-items-container"></div>
                                    <button type="submit" class="btn btn-primary w-100 mb-2" id="proceedCheckoutBtn">
                                        <i class="fas fa-credit-card"></i> Tiến hành thanh toán
                                    </button>
                                </form>

                                <div id="noSelectionWarning" class="alert alert-warning mt-2 d-none" role="alert">
                                    Vui lòng chọn ít nhất một sản phẩm để thanh toán.
                                </div>

                                <div class="text-center mt-3">
                                    <small class="text-muted">
                                        <i class="fas fa-shield-alt"></i> Thanh toán an toàn và bảo mật
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('input[name="quantity"]').on('change', function () {
                const value = parseInt($(this).val(), 10);
                if (isNaN(value) || value < 1) {
                    $(this).val(1);
                    this.form.submit();
                }
            });

            const VAT_RATE = 0.15;
            const baseDiscount = parseFloat('@discountInvariant');
            const totalItemCount = @itemCount;

            const checkboxes = $('.cart-item-checkbox');
            const selectAll = $('#select-all');
            const subtotalElement = $('#cart-subtotal');
            const vatElement = $('#cart-vat');
            const totalElement = $('#cart-total');
            const discountRow = $('#cart-discount-row');
            const discountAmountElement = $('#cart-discount-amount');
            const proceedForm = $('#proceedCheckoutForm');
            const selectedItemsContainer = $('#selected-items-container');
            const proceedButton = $('#proceedCheckoutBtn');
            const noSelectionWarning = $('#noSelectionWarning');

            function formatCurrency(value) {
                return value.toLocaleString('vi-VN', { maximumFractionDigits: 0 }) + ' đ';
            }

            function updateSummary() {
                let subtotal = 0;
                let selectedCount = 0;

                checkboxes.each(function () {
                    const checkbox = $(this);
                    if (checkbox.is(':checked')) {
                        subtotal += parseFloat(checkbox.data('total')) || 0;
                        selectedCount++;
                    }
                });

                const hasDiscount = baseDiscount > 0 && totalItemCount > 0 && selectedCount === totalItemCount;
                const appliedDiscount = hasDiscount ? Math.min(baseDiscount, subtotal) : 0;
                const vat = subtotal * VAT_RATE;
                const total = subtotal - appliedDiscount + vat;

                subtotalElement.text(formatCurrency(subtotal));
                vatElement.text(formatCurrency(vat));

                if (hasDiscount && appliedDiscount > 0) {
                    discountRow.removeClass('d-none');
                    discountAmountElement.text('-' + formatCurrency(appliedDiscount));
                } else {
                    discountRow.addClass('d-none');
                    discountAmountElement.text('');
                }

                totalElement.text(formatCurrency(total));

                proceedButton.prop('disabled', selectedCount === 0);
                noSelectionWarning.toggleClass('d-none', selectedCount !== 0);

                if (selectedCount === checkboxes.length) {
                    selectAll.prop('checked', true).prop('indeterminate', false);
                } else if (selectedCount === 0) {
                    selectAll.prop('checked', false).prop('indeterminate', false);
                } else {
                    selectAll.prop('indeterminate', true);
                }
            }

            selectAll.on('change', function () {
                const isChecked = $(this).is(':checked');
                selectAll.prop('indeterminate', false);
                checkboxes.prop('checked', isChecked);
                updateSummary();
            });

            checkboxes.on('change', updateSummary);

            proceedForm.on('submit', function (event) {
                selectedItemsContainer.empty();
                const selectedIds = [];

                checkboxes.each(function () {
                    const checkbox = $(this);
                    if (checkbox.is(':checked')) {
                        selectedIds.push(checkbox.data('id'));
                    }
                });

                if (selectedIds.length === 0) {
                    event.preventDefault();
                    updateSummary();
                    return;
                }

                selectedIds.forEach(function (id) {
                    $('<input>', {
                        type: 'hidden',
                        name: 'selectedItemIds',
                        value: id
                    }).appendTo(selectedItemsContainer);
                });
            });

            updateSummary();
        });
    </script>
}

