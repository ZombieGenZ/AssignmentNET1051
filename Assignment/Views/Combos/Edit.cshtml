@using Assignment.ViewModels
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Collections.Generic
@using System.Linq
@using System.Text.Json
@model Assignment.Models.Combo

@{
    ViewData["Title"] = "Chỉnh sửa Combo";
    Layout = "_AdminLayout";

    var selectedProductIds = ViewData["SelectedProductIds"] as List<long> ?? new List<long>();
    var selectedQuantities = ViewData["SelectedQuantities"] as List<long> ?? new List<long>();
    var hasError = selectedProductIds.Any();

    var products = (IEnumerable<SelectListItem>?)ViewBag.Products ?? Enumerable.Empty<SelectListItem>();
    var comboItems = new List<ComboItemInput>();

    if (hasError)
    {
        for (var index = 0; index < selectedProductIds.Count; index++)
        {
            var quantity = index < selectedQuantities.Count ? selectedQuantities[index] : 1;
            comboItems.Add(new ComboItemInput
            {
                ProductId = selectedProductIds[index],
                Quantity = quantity
            });
        }
    }
    else if (Model.ComboItems != null && Model.ComboItems.Any())
    {
        foreach (var item in Model.ComboItems)
        {
            comboItems.Add(new ComboItemInput
            {
                ProductId = item.ProductId,
                Quantity = item.Quantity
            });
        }
    }

    if (!comboItems.Any())
    {
        comboItems.Add(new ComboItemInput
        {
            ProductId = null,
            Quantity = 1
        });
    }

    var productOptionsJson = JsonSerializer.Serialize(products.Select(p => new { value = p.Value, text = p.Text }));
}

<div class="container-fluid pt-4 px-4">
    <div class="row g-4 justify-content-center">
        <div class="col-sm-12 col-xl-8">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h4 class="mb-0 text-primary">
                        <i class="fas fa-edit me-2"></i>@ViewData["Title"]
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" method="post">
                        <input type="hidden" asp-for="Id" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <div class="row g-3 mb-3">
                            <div class="col-md-6">
                                <label asp-for="Name" class="form-label"></label>
                                <input asp-for="Name" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Giá combo hiện tại</label>
                                <input class="form-control" value='@Model.Price.ToString("C0")' readonly />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label"></label>
                            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ImageUrl" class="form-label"></label>
                            <input asp-for="ImageUrl" class="form-control" type="text" />
                            <span asp-validation-for="ImageUrl" class="text-danger"></span>
                        </div>

                        <div class="row g-3 mb-3">
                            <div class="col-md-4">
                                <label asp-for="Stock" class="form-label"></label>
                                <input asp-for="Stock" class="form-control" type="number" />
                                <span asp-validation-for="Stock" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="Index" class="form-label"></label>
                                <input asp-for="Index" class="form-control" type="number" />
                                <span asp-validation-for="Index" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group h-100 d-flex flex-column justify-content-end">
                                    <div class="form-check">
                                        <input asp-for="IsPublish" class="form-check-input" type="checkbox" />
                                        <label asp-for="IsPublish" class="form-check-label"></label>
                                        <span asp-validation-for="IsPublish" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row g-3 mb-3">
                            <div class="col-md-6">
                                <label asp-for="DiscountType" class="form-label"></label>
                                <select asp-for="DiscountType" class="form-select" id="DiscountType">
                                    <option value="0">Không giảm giá</option>
                                    <option value="1">Giảm theo %</option>
                                </select>
                                <span asp-validation-for="DiscountType" class="text-danger"></span>
                            </div>
                            <div class="col-md-6" id="DiscountField" style="display: none;">
                                <label asp-for="Discount" class="form-label"></label>
                                <input asp-for="Discount" class="form-control" type="number" id="DiscountInput" />
                                <span asp-validation-for="Discount" class="text-danger"></span>
                            </div>
                        </div>

                        <hr />
                        <h5 class="mb-3">Sản phẩm trong Combo</h5>
                        <div id="comboItemsContainer">
                            @for (var index = 0; index < comboItems.Count; index++)
                            {
                                var item = comboItems[index];
                                <div class="combo-item-row row g-2 mb-2 align-items-end">
                                    <div class="col-md-7">
                                        <label class="form-label">Sản phẩm</label>
                                        <select name="ProductIds" class="form-select product-select" required>
                                            <option value="">-- Chọn sản phẩm --</option>
                                            @foreach (var product in products)
                                            {
                                                var isSelected = product.Value == item.ProductId?.ToString();
                                                <option value="@product.Value" selected="@(isSelected ? "selected" : null)">@product.Text</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="form-label">Số lượng</label>
                                        <input type="number" name="Quantities" class="form-control" min="1" value="@item.Quantity" required />
                                    </div>
                                    <div class="col-md-2">
                                        <button type="button" class="btn btn-danger w-100" onclick="removeComboItem(this)"><i class="fas fa-trash-alt"></i> Xóa</button>
                                    </div>
                                </div>
                            }
                        </div>
                        <button type="button" class="btn btn-success btn-sm mt-2" onclick="addComboItem()"><i class="fas fa-plus"></i> Thêm sản phẩm</button>

                        <div class="card-footer bg-transparent border-top d-flex justify-content-end gap-2 mt-4">
                            @if (User.HasAnyPermission("GetCombo", "GetComboAll"))
                            {
                                <a class="btn btn-secondary" asp-action="Index">
                                    <i class="fas fa-arrow-left me-2"></i>Trở về
                                </a>
                            }
                            <button type="submit" class="btn btn-warning">
                                <i class="fas fa-save me-2"></i>Lưu thay đổi
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const allProducts = @Html.Raw(productOptionsJson);

        function toggleDiscountField() {
            const discountType = document.getElementById('DiscountType').value;
            const discountField = document.getElementById('DiscountField');
            const discountInput = document.getElementById('DiscountInput');

            if (discountType === '0') {
                discountField.style.display = 'none';
                discountInput.value = '';
                discountInput.removeAttribute('required');
                discountInput.removeAttribute('max');
                discountInput.setAttribute('min', '0');
            } else {
                discountField.style.display = 'block';
                discountInput.setAttribute('required', 'required');
                discountInput.setAttribute('max', '100');
                discountInput.setAttribute('min', '0');
            }
        }

        function getSelectedProductIds() {
            const selectedIds = [];
            document.querySelectorAll('.product-select').forEach(select => {
                if (select.value) {
                    selectedIds.push(select.value);
                }
            });
            return selectedIds;
        }

        function updateAllDropdowns() {
            const selectedIds = getSelectedProductIds();
            document.querySelectorAll('.product-select').forEach(select => {
                const currentValue = select.value;
                select.innerHTML = '<option value="">-- Chọn sản phẩm --</option>';
                allProducts.forEach(product => {
                    if (product.value === currentValue || !selectedIds.includes(product.value)) {
                        const option = document.createElement('option');
                        option.value = product.value ?? '';
                        option.text = product.text ?? '';
                        if (product.value === currentValue) {
                            option.selected = true;
                        }
                        select.appendChild(option);
                    }
                });
            });
        }

        function addComboItem() {
            const container = document.getElementById('comboItemsContainer');
            const row = document.createElement('div');
            row.className = 'combo-item-row row g-2 mb-2 align-items-end';

            const selectedIds = getSelectedProductIds();
            let optionsHtml = '<option value="">-- Chọn sản phẩm --</option>';
            allProducts.forEach(product => {
                if (!selectedIds.includes(product.value)) {
                    optionsHtml += `<option value="${product.value}">${product.text}</option>`;
                }
            });

            row.innerHTML = `
                <div class="col-md-7">
                    <label class="form-label">Sản phẩm</label>
                    <select name="ProductIds" class="form-select product-select" required>
                        ${optionsHtml}
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Số lượng</label>
                    <input type="number" name="Quantities" class="form-control" min="1" value="1" required />
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-danger w-100" onclick="removeComboItem(this)"><i class="fas fa-trash-alt"></i> Xóa</button>
                </div>`;

            container.appendChild(row);
            updateAllDropdowns();
        }

        function removeComboItem(button) {
            const container = document.getElementById('comboItemsContainer');
            const items = container.getElementsByClassName('combo-item-row');
            if (items.length > 1) {
                button.closest('.combo-item-row').remove();
                updateAllDropdowns();
            }
        }

        document.addEventListener('change', event => {
            if (event.target.classList.contains('product-select')) {
                updateAllDropdowns();
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            const discountSelect = document.getElementById('DiscountType');
            if (discountSelect) {
                discountSelect.addEventListener('change', toggleDiscountField);
            }

            toggleDiscountField();
            updateAllDropdowns();
        });
    </script>
}
