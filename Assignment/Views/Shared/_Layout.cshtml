@using Assignment.Extensions
@using Assignment.Models
﻿@using Microsoft.AspNetCore.Identity
@using System
@using System.Linq
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FoodApp Việt</title>

    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />

    <script src="https://kit.fontawesome.com/476445fe42.js" crossorigin="anonymous"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary-color: #FF6347;
            --dark-bg: #212529;
            --light-bg: #f8f9fa;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--light-bg);
        }

        .navbar {
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.5rem;
            color: var(--primary-color) !important;
        }

        .nav-link {
            font-weight: 500;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

            .btn-primary:hover {
                background-color: #e5533d;
                border-color: #e5533d;
            }

        .footer {
            background-color: var(--dark-bg);
            color: white;
        }

            .footer a {
                color: var(--primary-color);
                text-decoration: none;
            }

                .footer a:hover {
                    text-decoration: underline;
                }

        .user-avatar {
            width: 32px;
            height: 32px;
            font-size: 1rem;
            background-color: var(--primary-color);
            color: white;
        }

        .dropdown-item:active {
            background-color: var(--primary-color);
            color: white !important;
        }

        .cart-badge {
            font-size: .65em;
            padding: .35em .6em;
            line-height: 1;
        }
    </style>
</head>
<body class="d-flex flex-column min-vh-100">
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-white sticky-top">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-utensils me-2"></i>FoodApp
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar"
                        aria-controls="mainNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div id="mainNavbar" class="collapse navbar-collapse">

                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">Trang chủ</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Privacy">Thực đơn</a>
                        </li>
                    </ul>


                    <ul class="navbar-nav ms-auto mb-2 mb-lg-0 align-items-center">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            var userName = User.Identity?.Name ?? "Người dùng";
                            var nameParts = userName.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                            var initials = nameParts.Length == 0 ? "?" : string.Concat(nameParts.Select(part => char.ToUpperInvariant(part[0])));

                            <li class="nav-item me-3">
                                <a class="nav-link position-relative fs-5" asp-area="" asp-controller="Cart" asp-action="Index" title="Giỏ hàng">
                                    <i class="fas fa-shopping-cart"></i>
                                    <span id="cart-count" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger cart-badge">
                                        0
                                        <span class="visually-hidden">sản phẩm trong giỏ</span>
                                    </span>
                                </a>
                            </li>

                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle d-flex align-items-center gap-2" href="#" id="accountMenu"
                                   role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="d-inline-flex justify-content-center align-items-center rounded-circle user-avatar">
                                        @initials
                                    </span>
                                    <span class="d-none d-lg-inline">@userName</span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="accountMenu">
                                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index"><i class="fas fa-user-circle me-2"></i>Hồ sơ</a></li>
                                    <li><a class="dropdown-item" asp-area="" asp-controller="Order" asp-action="History"><i class="fas fa-history me-2"></i>Lịch sử đặt hàng</a></li>

                                    @{
                                        var canAccessStatistics = User.HasPermission("ViewStatistics");
                                        var canAccessCategories = User.HasAnyPermission("GetCategoryAll", "GetCategory");
                                        var canAccessProducts = User.HasAnyPermission("GetProductAll", "GetProduct");
                                        var canAccessCombos = User.HasAnyPermission("GetComboAll", "GetCombo");
                                        var canAccessVouchers = User.HasAnyPermission("GetVoucherAll", "GetVoucher");
                                        var canAccessOrders = User.HasPermission("GetOrderAll");

                                        var dashboardUrl = string.Empty;

                                        if (canAccessStatistics)
                                        {
                                            dashboardUrl = Url.Action("Index", "Statistics") ?? string.Empty;
                                        }
                                        else if (canAccessProducts)
                                        {
                                            dashboardUrl = Url.Action("Index", "Products") ?? string.Empty;
                                        }
                                        else if (canAccessCategories)
                                        {
                                            dashboardUrl = Url.Action("Index", "Categories") ?? string.Empty;
                                        }
                                        else if (canAccessCombos)
                                        {
                                            dashboardUrl = Url.Action("Index", "Combos") ?? string.Empty;
                                        }
                                        else if (canAccessVouchers)
                                        {
                                            dashboardUrl = Url.Action("Index", "Vouchers") ?? string.Empty;
                                        }
                                        else if (canAccessOrders)
                                        {
                                            dashboardUrl = Url.Action("Manage", "Order") ?? string.Empty;
                                        }

                                        if (!string.IsNullOrEmpty(dashboardUrl))
                                        {
                                            @:<li><hr class="dropdown-divider" /></li>
                                            @:<li>
                                            @:    <a class="dropdown-item" href="@dashboardUrl">
                                            @:        <i class="fa-solid fa-gauge-high me-2"></i>Dashboard
                                            @:    </a>
                                            @:</li>
                                        }
                                    }

                                    <li><hr class="dropdown-divider" /></li>
                                    <li>
                                        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")" method="post">
                                            <button type="submit" class="dropdown-item text-danger"><i class="fas fa-sign-out-alt me-2"></i>Đăng xuất</button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="btn btn-outline-secondary me-2" asp-area="Identity" asp-page="/Account/Login">Đăng nhập</a>
                            </li>
                            <li class="nav-item">
                                <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Register">Đăng ký</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container my-4 flex-grow-1">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="footer mt-auto py-3">
        <div class="container text-center">
            &copy; @DateTime.Now.Year - FoodApp Việt - <a asp-area="" asp-controller="Home" asp-action="Privacy">Chính sách bảo mật</a>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    @if (SignInManager.IsSignedIn(User))
    {
        <script type="text/javascript">
            function updateCartBadge(count) {
                var cartBadge = $('#cart-count');
                if (cartBadge.length) {
                    var displayCount = count > 0 ? count : 0;
                    cartBadge.text(displayCount);
                    cartBadge.removeClass('d-none');
                }
            }

            function fetchCartCount() {
                $.ajax({
                    url: '@Url.Action("GetCount", "Cart")',
                    type: 'GET',
                    success: function (data) {
                        updateCartBadge(data.count);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        if (jqXHR.status !== 401) {
                            console.error("Lỗi khi tải số lượng giỏ hàng: ", textStatus, errorThrown);
                        }
                        updateCartBadge(0);
                    }
                });
            }

            $(document).ready(function () {
                fetchCartCount();
            });
        </script>
    }
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
