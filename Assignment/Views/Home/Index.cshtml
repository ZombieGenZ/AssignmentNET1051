@model Assignment.Models.HomeViewModel
@using Microsoft.AspNetCore.Routing
@using System.Globalization
@using System.Linq
@using System.Collections.Generic
@using Assignment.Services

@{
    ViewData["Title"] = "Trang chủ";
    var filter = Model.Filter ?? new Assignment.ViewModels.HomeFilterViewModel();
    var activeSegment = filter.Segment ?? "all";
    var activeCategoryId = filter.CategoryId;
    var showCombos = activeSegment == "all" || activeSegment == "combo";
    var showProducts = activeSegment == "all" || activeSegment == "category";
    var advancedOpen = filter.HasAdvancedFilters;

    var baseRoute = new RouteValueDictionary();
    if (!string.IsNullOrWhiteSpace(filter.SearchTerm))
    {
        baseRoute["SearchTerm"] = filter.SearchTerm;
    }
    if (filter.MinPrice.HasValue)
    {
        baseRoute["MinPrice"] = filter.MinPrice.Value.ToString(CultureInfo.InvariantCulture);
    }
    if (filter.MaxPrice.HasValue)
    {
        baseRoute["MaxPrice"] = filter.MaxPrice.Value.ToString(CultureInfo.InvariantCulture);
    }
    if (filter.IsSpicy.HasValue)
    {
        baseRoute["IsSpicy"] = filter.IsSpicy.Value.ToString().ToLowerInvariant();
    }
    if (filter.IsVegetarian.HasValue)
    {
        baseRoute["IsVegetarian"] = filter.IsVegetarian.Value.ToString().ToLowerInvariant();
    }
    if (filter.OnlyDiscounted)
    {
        baseRoute["OnlyDiscounted"] = "true";
    }

    Dictionary<string, string> CreateRoute(string segment, long? categoryId = null)
    {
        var route = baseRoute.ToDictionary(
            kvp => kvp.Key,
            kvp => System.Convert.ToString(kvp.Value, CultureInfo.InvariantCulture) ?? string.Empty);

        route["Segment"] = segment;

        if (categoryId.HasValue)
        {
            route["CategoryId"] = categoryId.Value.ToString(CultureInfo.InvariantCulture);
        }
        else
        {
            route.Remove("CategoryId");
        }

        return route;
    }

    var allRoute = CreateRoute("all");
    var comboRoute = CreateRoute("combo");

    var categoryRoutes = Model.Categories
        .Select(category => new
        {
            category,
            route = CreateRoute("category", category.Id)
        })
        .ToList();

    var vietnamCulture = CultureInfo.GetCultureInfo("vi-VN");

    string FormatPriceRange(string? priceRange, decimal? fallbackPrice = null)
    {
        if (string.IsNullOrWhiteSpace(priceRange))
        {
            if (fallbackPrice.HasValue && fallbackPrice.Value > 0)
            {
                return $"{fallbackPrice.Value.ToString("N0", vietnamCulture)} ₫";
            }

            return "Liên hệ";
        }

        var parts = priceRange.Split('-', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);

        string FormatPart(string part)
        {
            return decimal.TryParse(part, NumberStyles.Number, CultureInfo.InvariantCulture, out var value)
                ? value.ToString("N0", vietnamCulture)
                : part;
        }

        if (parts.Length == 1)
        {
            return $"{FormatPart(parts[0])} ₫";
        }

        var minPart = FormatPart(parts[0]);
        var maxPart = FormatPart(parts[parts.Length - 1]);
        return $"{minPart} - {maxPart} ₫";
    }
}

<link href="~/css/home.css" rel="stylesheet" />

<div class="container mt-4">
    @Html.AntiForgeryToken()

    <div class="home-search shadow-sm">
        <form method="get" id="home-search-form">
            <div class="search-basic">
                <div class="input-group search-input">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text"
                           class="form-control"
                           name="SearchTerm"
                           value="@filter.SearchTerm"
                           placeholder="Tìm kiếm món ăn, combo, danh mục..." />
                    <input type="hidden" name="Segment" value="@activeSegment" />
                    @if (activeSegment == "category" && activeCategoryId.HasValue)
                    {
                        <input type="hidden" name="CategoryId" value="@activeCategoryId" />
                    }
                </div>
                <div class="d-flex gap-2 align-items-center">
                    <button type="submit" class="btn btn-primary search-submit">Tìm kiếm</button>
                    <button class="btn btn-outline-secondary advanced-toggle"
                            type="button"
                            data-bs-toggle="collapse"
                            data-bs-target="#advanced-search"
                            aria-expanded="@advancedOpen.ToString().ToLowerInvariant()"
                            aria-controls="advanced-search">
                        <i class="fas fa-sliders-h me-1"></i> Tìm kiếm nâng cao
                    </button>
                </div>
            </div>

            <div class="collapse advanced-search @((advancedOpen ? "show" : string.Empty))" id="advanced-search">
                <div class="row g-3 mt-0">
                    <div class="col-12 col-md-6 col-lg-3">
                        <label class="form-label" for="min-price">Giá từ</label>
                        <div class="input-group">
                            <span class="input-group-text">₫</span>
                            <input type="number"
                                   class="form-control"
                                   id="min-price"
                                   name="MinPrice"
                                   min="0"
                                   step="1000"
                                   value="@(filter.MinPrice?.ToString(CultureInfo.InvariantCulture))"
                                   placeholder="0" />
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-3">
                        <label class="form-label" for="max-price">Giá đến</label>
                        <div class="input-group">
                            <span class="input-group-text">₫</span>
                            <input type="number"
                                   class="form-control"
                                   id="max-price"
                                   name="MaxPrice"
                                   min="0"
                                   step="1000"
                                   value="@(filter.MaxPrice?.ToString(CultureInfo.InvariantCulture))"
                                   placeholder="Không giới hạn" />
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-3">
                        <label class="form-label" for="spicy-filter">Độ cay</label>
                        <select class="form-select" id="spicy-filter" name="IsSpicy">
                            <option value="" selected="@(!filter.IsSpicy.HasValue)">Tất cả</option>
                            <option value="true" selected="@(filter.IsSpicy == true)">Chỉ món cay</option>
                            <option value="false" selected="@(filter.IsSpicy == false)">Không cay</option>
                        </select>
                    </div>
                    <div class="col-12 col-md-6 col-lg-3">
                        <label class="form-label" for="vegetarian-filter">Chế độ ăn</label>
                        <select class="form-select" id="vegetarian-filter" name="IsVegetarian">
                            <option value="" selected="@(!filter.IsVegetarian.HasValue)">Tất cả</option>
                            <option value="true" selected="@(filter.IsVegetarian == true)">Đồ chay</option>
                            <option value="false" selected="@(filter.IsVegetarian == false)">Không chay</option>
                        </select>
                    </div>
                    <div class="col-12">
                        <div class="form-check">
                            <input class="form-check-input"
                                   type="checkbox"
                                   value="true"
                                   id="discount-filter"
                                   name="OnlyDiscounted"
                                   @if (filter.OnlyDiscounted)
                                    {
                                        <text>checked="checked"</text>
                                    } />
                            <label class="form-check-label" for="discount-filter">
                                Chỉ hiển thị ưu đãi/khuyến mãi
                            </label>
                        </div>
                    </div>
                    <div class="col-12 d-flex justify-content-end">
                        <button type="button" class="btn btn-outline-secondary" id="resetFiltersBtn">
                            <i class="fas fa-rotate-left me-1"></i> Đặt lại bộ lọc
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div class="category-tabs-wrapper">
        <ul class="nav category-tabs" role="tablist">
            <li class="nav-item" role="presentation">
                <a class="nav-link @(activeSegment == "all" ? "active" : string.Empty)"
                   asp-action="Index"
                   asp-all-route-data="@allRoute">
                    Tất cả
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link @(activeSegment == "combo" ? "active" : string.Empty)"
                   asp-action="Index"
                   asp-all-route-data="@comboRoute">
                    Combo
                </a>
            </li>
            @foreach (var categoryRoute in categoryRoutes)
            {
                <li class="nav-item" role="presentation">
                    <a class="nav-link @((activeSegment == "category" && activeCategoryId == categoryRoute.category.Id) ? "active" : string.Empty)"
                       asp-action="Index"
                       asp-all-route-data="@categoryRoute.route">
                        @categoryRoute.category.Name
                    </a>
                </li>
            }
        </ul>
    </div>

    @if (showCombos)
    {
        <section class="home-section">
            <div class="section-header">
                <h2 class="section-title">🎁 Combo Đặc Biệt</h2>
                <span class="result-pill">@Model.Combos.Count() mục</span>
            </div>

            @if (Model.Combos.Any())
            {
                <div class="row g-4">
                    @foreach (var combo in Model.Combos)
                    {
                        var hasPercentDiscount = combo.DiscountType == Assignment.Enums.DiscountType.Percent && combo.Discount.HasValue;
                        var hasAmountDiscount = combo.DiscountType == Assignment.Enums.DiscountType.Amount && combo.Discount.HasValue;
                        var hasFixedDiscount = combo.DiscountType == Assignment.Enums.DiscountType.FixedAmount && combo.Discount.HasValue;
                        var comboFinalPrice = PriceCalculator.GetComboFinalPrice(combo);
                        var comboHasDiscount = hasPercentDiscount || hasAmountDiscount || hasFixedDiscount;
                        var comboSavings = comboHasDiscount ? Math.Max(combo.Price - comboFinalPrice, 0) : 0;
                        <div class="col-md-4 col-lg-3">
                            <a class="product-card-link" href="@Url.Action("ComboDetail", "Home", new { id = combo.Id })">
                                <div class="product-card">
                                    <div class="position-relative">
                                        <img src="@combo.ImageUrl" class="product-image" alt="@combo.Name" />
                                        @if (hasPercentDiscount)
                                        {
                                            <span class="badge-discount">-@combo.Discount%</span>
                                        }
                                        else if (hasAmountDiscount)
                                        {
                                            <span class="badge-discount">-@combo.Discount.Value.ToString("N0") ₫</span>
                                        }
                                        else if (hasFixedDiscount)
                                        {
                                            <span class="badge-discount">Giá ưu đãi</span>
                                        }
                                    </div>
                                    <div class="product-info">
                                        <h5 class="product-name">@combo.Name</h5>

                                        <div class="product-badges">
                                            @if ((combo.ComboItems ?? Enumerable.Empty<Assignment.Models.ComboItem>()).Any(ci => ci.Product?.IsSpicy == true))
                                            {
                                                <span class="badge-spicy">🌶️ Cay</span>
                                            }
                                            @if ((combo.ComboItems ?? Enumerable.Empty<Assignment.Models.ComboItem>()).All(ci => ci.Product?.IsVegetarian == true))
                                            {
                                                <span class="badge-vegetarian">🥗 Chay</span>
                                            }
                                        </div>

                                        <div class="rating">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Floor(combo.AverageEvaluate))
                                                {
                                                    <i class="fas fa-star"></i>
                                                }
                                                else if (i - 0.5 <= combo.AverageEvaluate)
                                                {
                                                    <i class="fas fa-star-half-alt"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star"></i>
                                                }
                                            }
                                            <small>(@combo.TotalEvaluate)</small>
                                        </div>

                                        <div class="mb-3">
                                            @if (!comboHasDiscount)
                                            {
                                                <span class="final-price">@comboFinalPrice.ToString("N0") ₫</span>
                                            }
                                            else
                                            {
                                                <div>
                                                    <span class="original-price">@combo.Price.ToString("N0") ₫</span>
                                                </div>
                                                <span class="final-price">@comboFinalPrice.ToString("N0") ₫</span>
                                                @if (hasPercentDiscount && comboSavings > 0)
                                                {
                                                    <div class="small text-muted">Tiết kiệm @comboSavings.ToString("N0") ₫</div>
                                                }
                                                else if (hasAmountDiscount)
                                                {
                                                    <div class="small text-muted">Giảm @combo.Discount.Value.ToString("N0") ₫</div>
                                                }
                                                else if (hasFixedDiscount && comboSavings > 0)
                                                {
                                                    <div class="small text-muted">Tiết kiệm @comboSavings.ToString("N0") ₫</div>
                                                }
                                            }
                                        </div>

                                        <div class="card-cta">
                                            <span>Xem chi tiết</span>
                                            <i class="fas fa-arrow-right"></i>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    Không tìm thấy combo phù hợp với điều kiện hiện tại.
                </div>
            }
        </section>
    }

    @if (showProducts)
    {
        <section class="home-section">
            <div class="section-header">
                <h2 class="section-title">
                    🍽️ @(activeSegment == "category" && activeCategoryId.HasValue
                        ? Model.Categories.FirstOrDefault(c => c.Id == activeCategoryId)?.Name ?? "Danh mục"
                        : "Danh mục món nổi bật")
                </h2>
                <span class="result-pill">@Model.Products.Count() mục</span>
            </div>

            @if (Model.Products.Any())
            {
                if (activeSegment == "category" && activeCategoryId.HasValue)
                {
                    <div class="row g-4">
                        @foreach (var product in Model.Products)
                        {
                            var defaultType = product.PrimaryProductType;
                            var discountType = defaultType?.DiscountType ?? Assignment.Enums.DiscountType.None;
                            var discountValue = defaultType?.Discount;
                            var hasPercentDiscount = discountType == Assignment.Enums.DiscountType.Percent && discountValue.HasValue;
                            var hasAmountDiscount = discountType == Assignment.Enums.DiscountType.Amount && discountValue.HasValue;
                            var hasFixedDiscount = discountType == Assignment.Enums.DiscountType.FixedAmount && discountValue.HasValue;
                            var hasDiscount = discountType != Assignment.Enums.DiscountType.None && discountValue.HasValue;
                            var finalPrice = PriceCalculator.GetProductFinalPrice(product);
                            var originalPrice = defaultType?.Price ?? 0m;
                            var savings = hasDiscount ? Math.Max((double)originalPrice - finalPrice, 0) : 0;
                            var priceDisplay = FormatPriceRange(product.PriceRange, originalPrice);
                            <div class="col-md-4 col-lg-3">
                                <a class="product-card-link" href="@Url.Action("ProductDetail", "Home", new { id = product.Id })">
                                    <div class="product-card">
                                        <div class="position-relative">
                                            <img src="@product.ProductImageUrl" class="product-image" alt="@product.Name" />
                                            @if (hasPercentDiscount)
                                            {
                                                <span class="badge-discount">-@discountValue%</span>
                                            }
                                            else if (hasAmountDiscount)
                                            {
                                                <span class="badge-discount">-@discountValue.Value.ToString("N0") ₫</span>
                                            }
                                            else if (hasFixedDiscount)
                                            {
                                                <span class="badge-discount">Giá ưu đãi</span>
                                            }
                                        </div>
                                        <div class="product-info">
                                            <h5 class="product-name">@product.Name</h5>

                                            <div class="product-badges">
                                                @if (product.IsSpicy)
                                                {
                                                    <span class="badge-spicy">🌶️ Cay</span>
                                                }
                                                @if (product.IsVegetarian)
                                                {
                                                    <span class="badge-vegetarian">🥗 Chay</span>
                                                }
                                            </div>

                                            <div class="rating">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= Math.Floor(product.AverageEvaluate))
                                                    {
                                                        <i class="fas fa-star"></i>
                                                    }
                                                    else if (i - 0.5 <= product.AverageEvaluate)
                                                    {
                                                        <i class="fas fa-star-half-alt"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star"></i>
                                                    }
                                                }
                                                <small>(@product.TotalEvaluate)</small>
                                            </div>

                                            <div class="mb-3">
                                                @if (!hasDiscount)
                                                {
                                                    <span class="final-price">@priceDisplay</span>
                                                }
                                                else
                                                {
                                                    <div>
                                                        <span class="original-price">@originalPrice.ToString("N0") ₫</span>
                                                    </div>
                                                    <span class="final-price">@finalPrice.ToString("N0") ₫</span>
                                                    @if (hasPercentDiscount && savings > 0)
                                                    {
                                                        <div class="small text-muted">Tiết kiệm @savings.ToString("N0") ₫</div>
                                                    }
                                                    else if (hasAmountDiscount)
                                                    {
                                                        <div class="small text-muted">Giảm @discountValue.Value.ToString("N0") ₫</div>
                                                    }
                                                    else if (hasFixedDiscount && savings > 0)
                                                    {
                                                        <div class="small text-muted">Tiết kiệm @savings.ToString("N0") ₫</div>
                                                    }
                                                }
                                            </div>

                                            <div class="card-cta">
                                                <span>Xem chi tiết</span>
                                                <i class="fas fa-arrow-right"></i>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        }
                    </div>
                }
                else
                {
                    var productsByCategory = Model.Products
                        .GroupBy(p => p.Category)
                        .OrderBy(g => g.Key?.Index ?? 0);

                    foreach (var categoryGroup in productsByCategory)
                    {
                        var category = categoryGroup.Key;
                        <h3 class="sub-section-title">@(category?.Name ?? "Khác")</h3>
                        <div class="row g-4">
                            @foreach (var product in categoryGroup)
                            {
                                var defaultType = product.PrimaryProductType;
                                var discountType = defaultType?.DiscountType ?? Assignment.Enums.DiscountType.None;
                                var discountValue = defaultType?.Discount;
                                var hasPercentDiscount = discountType == Assignment.Enums.DiscountType.Percent && discountValue.HasValue;
                                var hasAmountDiscount = discountType == Assignment.Enums.DiscountType.Amount && discountValue.HasValue;
                                var hasFixedDiscount = discountType == Assignment.Enums.DiscountType.FixedAmount && discountValue.HasValue;
                                var hasDiscount = discountType != Assignment.Enums.DiscountType.None && discountValue.HasValue;
                                var finalPrice = PriceCalculator.GetProductFinalPrice(product);
                                var originalPrice = defaultType?.Price ?? 0m;
                                var savings = hasDiscount ? Math.Max((double)originalPrice - finalPrice, 0) : 0;
                                var priceDisplay = FormatPriceRange(product.PriceRange, originalPrice);
                                <div class="col-md-4 col-lg-3">
                                    <a class="product-card-link" href="@Url.Action("ProductDetail", "Home", new { id = product.Id })">
                                        <div class="product-card">
                                        <div class="position-relative">
                                            <img src="@product.ProductImageUrl" class="product-image" alt="@product.Name" />
                                            @if (hasPercentDiscount)
                                            {
                                                <span class="badge-discount">-@discountValue%</span>
                                            }
                                            else if (hasAmountDiscount)
                                            {
                                                <span class="badge-discount">-@discountValue.Value.ToString("N0") ₫</span>
                                            }
                                            else if (hasFixedDiscount)
                                            {
                                                <span class="badge-discount">Giá ưu đãi</span>
                                            }
                                        </div>
                                        <div class="product-info">
                                            <h5 class="product-name">@product.Name</h5>

                                            <div class="product-badges">
                                                @if (product.IsSpicy)
                                                {
                                                    <span class="badge-spicy">🌶️ Cay</span>
                                                }
                                                @if (product.IsVegetarian)
                                                {
                                                    <span class="badge-vegetarian">🥗 Chay</span>
                                                }
                                            </div>

                                            <div class="rating">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= Math.Floor(product.AverageEvaluate))
                                                    {
                                                        <i class="fas fa-star"></i>
                                                    }
                                                    else if (i - 0.5 <= product.AverageEvaluate)
                                                    {
                                                        <i class="fas fa-star-half-alt"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star"></i>
                                                    }
                                                }
                                                <small>(@product.TotalEvaluate)</small>
                                            </div>

                                            <div class="mb-3">
                                                @if (!hasDiscount)
                                                {
                                                    <span class="final-price">@priceDisplay</span>
                                                }
                                                else
                                                {
                                                    <div>
                                                        <span class="original-price">@originalPrice.ToString("N0") ₫</span>
                                                    </div>
                                                    <span class="final-price">@finalPrice.ToString("N0") ₫</span>
                                                    @if (hasPercentDiscount && savings > 0)
                                                    {
                                                        <div class="small text-muted">Tiết kiệm @savings.ToString("N0") ₫</div>
                                                    }
                                                    else if (hasAmountDiscount)
                                                    {
                                                        <div class="small text-muted">Giảm @discountValue.Value.ToString("N0") ₫</div>
                                                    }
                                                    else if (hasFixedDiscount && savings > 0)
                                                    {
                                                        <div class="small text-muted">Tiết kiệm @savings.ToString("N0") ₫</div>
                                                    }
                                                }
                                            </div>

                                            <div class="card-cta">
                                                <span>Xem chi tiết</span>
                                                <i class="fas fa-arrow-right"></i>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                                </div>
                            }
                        </div>
                    }
                }
            }
            else
            {
                <div class="empty-state">
                    Không tìm thấy món ăn phù hợp với điều kiện hiện tại.
                </div>
            }
        </section>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#resetFiltersBtn').on('click', function () {
                const form = $('#home-search-form');

                form.find('input[type="text"], input[type="number"]').val('');
                form.find('select').each(function () {
                    $(this).val('');
                });
                $('#discount-filter').prop('checked', false);

                form.find('input[name="Segment"]').val('all');
                form.find('input[name="CategoryId"]').remove();

                $('#advanced-search').removeClass('show');
                $('.advanced-toggle').attr('aria-expanded', 'false');

                form.submit();
            });
        });
    </script>
}
